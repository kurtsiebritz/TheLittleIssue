@{
    ViewBag.Title = "Login";
    ViewData["HideNavBar"] = true;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - The Small Issue</title>
    <style>
        body {
            font-family: 'Comic Sans MS', cursive, sans-serif;
            background: linear-gradient(to bottom, #A0D8E0 30%, #FFEB3B 60%);
            color: #333;
            margin: 0;
            padding: 0;
            display: flex;
            flex-direction: column; /* Stack header and container vertically */
            justify-content: center; /* Center the container vertically */
            align-items: center; /* Center items horizontally */
            height: 100vh; /* Full viewport height */
            position: relative; /* For the pseudo-element */
        }

        header {
            text-align: center; /* Center header text */
            margin-top: 65px; /* Space between header and container */
            width: 100%; /* Full width for header */
        }

        .title {
            font-size: 2em; /* Adjusted font size for better responsiveness */
            color: red;
            margin: 0; /* Remove default margin for better fit */
        }

        .container {
            background-color: rgba(255, 255, 255, 0); /* Fully transparent background */
            border-radius: 30px; /* Rounded corners */
            box-shadow: none; /* No shadow */
            padding: 20px; /* Padding around content */
            text-align: center; /* Center text */
            max-width: 400px; /* Maximum width of the container */
            width: 90%; /* Responsive width */
            border: 2px solid rgba(255, 255, 255, 0.5); /* Light white border */
            z-index: 1; /* Bring container above the pseudo-element */
            box-sizing: border-box; /* Include padding in width calculations */
            margin-top: 30px; /* Space above container */
        }




        .subtitle {
            font-size: 1em; /* Adjusted font size for better responsiveness */
            color: #333;
        }

        .input-group {
            margin: 10px 0; /* Reduced margin for smaller screens */
            text-align: left;
        }

        label {
            font-weight: bold;
            display: block;
            margin-bottom: 5px;
        }

        input {
            width: 100%;
            padding: 10px;
            border-radius: 5px; /* More rounded look */
            border: 2px solid #add8e6; /* Light blue border */
            font-size: 1em;
        }


            input:focus {
                outline: none;
                border-color: #33ccff;
            }

        .login-button, .guest-button {
            width: 100%; 
            background-color: #33ccff;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 10px 0;
            font-size: 1.2em;
            cursor: pointer;
            transition: background-color 0.3s ease;
            margin-top: 10px; 
        }

            .login-button:hover {
                background-color: #0080ff;
            }

        .guest-button {
            background-color: #ffcc00; 
            color: black;
        }

            .guest-button:hover {
                background-color: #e6b800; 
            }

        .footer-text {
            margin-top: 20px;
        }

        .link {
            color: red;
            text-decoration: underline;
        }

        .error-message {
            color: red;
            margin-bottom: 15px;
        }

        body::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-image: radial-gradient(circle, rgba(255, 255, 255, 0.2) 20%, transparent 20%);
            background-size: 100px 100px;
            opacity: 0.5;
            z-index: 0; /* Behind the container */
        }
    </style>
</head>
<body>

    <div class="container">
        <h1 class="title">Welcome Back!</h1>
        <p class="subtitle">Please log in to continue</p>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="error-message">
                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <p>@error.ErrorMessage</p>
                }
            </div>
        }

        <form action="/User/Login" method="post">
            <div class="input-group">
                <label for="email">Email:</label>
                <input type="email" id="email" name="email" required>
            </div>
            <div class="input-group">
                <label for="password">Password:</label>
                <input type="password" id="password" name="password" required>
            </div>
            <button type="submit" class="login-button">Login</button>
        </form>

        <button class="guest-button" onclick="window.location.href='/User/ContinueAsGuest'">Continue as Guest</button>

        <p class="footer-text">Don't have an account? <a href="/User/Register" class="link">Sign Up</a></p>
    </div>
</body>
</html>
